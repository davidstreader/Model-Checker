processes {
Zero1 = STOP.
Zero2 = ERROR.

One1 = a->One1.
One2 = a->STOP.
One3 = a->ERROR.
One4 = b->One4.
One5 = b->STOP.
One6 = b->ERROR.

Two1 = a->b->STOP.
Two2 = a->Two2|a->STOP.
Two3 = a->Two3|b->STOP.
Two4 = a->b->Two4.
Two5 = a->STOP|b->STOP.
Two6 = a->ERROR| a->STOP.
Two7 = a->ERROR|b->STOP.
Two8 = a->X|b->X, X = STOP.
  Two9 = (a->STOP + b->STOP).
Left = (One2=>One1) || (One1=>One1).
R1 = (One2||One1).
Right = (One2||One1) => One1.
}
//automata One1,One2,One3,One4,One5,One6.
//automata Two1,Two2,Two3,Two4,Two5,Two6,Two7,Two8.
automata  One1,One2, R1.
operation {
//Left * Right.
}


